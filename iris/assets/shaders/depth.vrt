#define MAX_LIGHT_COUNT 8

uniform mat4 u_modelMatrix;
uniform mat4 u_viewMatrix;
uniform mat4 u_projectionMatrix;
uniform mat4 u_mvp;

attribute vec3 a_vertexPos;
attribute vec2 a_texCoord;
attribute vec4 a_fragColor;
attribute vec3 a_fragNormal;

struct Light
{
    int type;

    mat4 viewMatrix;
    mat4 projectionMatrix;
    mat4 lightSpaceMatrix;

    vec3 position;
    vec3 direction;

    vec4 color;
    float range;
    float intensity;

    float spotAngleInner;
    float spotAngleOuter;

    float ambientStrength;

    vec4 specularColor;
    float specularStrength;

}; uniform Light light[MAX_LIGHT_COUNT];

varying vec3 v_vertexPos;
varying vec2 v_texCoord;
varying vec4 v_fragColor;
varying vec3 v_fragNormal;

void main()
{
    v_vertexPos = a_vertexPos;
    v_texCoord = a_texCoord;
    v_fragColor = a_fragColor;
    v_fragNormal = a_fragNormal;
    
    //mat4 mvp = u_projectionMatrix * u_modelMatrix * u_viewMatrix;
    //gl_Position = mvp * vec4(v_vertexPos, 1.0);

    //gl_Position = light[0].lightSpaceMatrix * u_modelMatrix * vec4(a_vertexPos, 1.0);
    gl_Position = u_mvp * vec4(a_vertexPos, 1.0);

    //gl_Position = vec4(a_vertexPos, 1.0);
    //gl_Position = light[0].projectionMatrix * light[0].viewMatrix * u_modelMatrix * vec4(a_vertexPos, 1.0);
}
